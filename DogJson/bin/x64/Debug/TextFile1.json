{
	"p3": {
		"x": 2,
		"y": 1,
		"z": 33
	},
	"dictionary3": [
		[
			[
				3,
				2,
				1
			],
			{
				"b": false,
				"num": 11111,
				"str": "rradads"
			}
		],
		[
			[
				1,
				4,
				-9.8
			],
			{
				"b": false,
				"num": 888,
				"str": "热热我"
			}
		],
		[
			[
				-3.2E-13,
				3E+13,
				0.99
			],
			{
				"b": false,
				"num": 999999,
				"str": "特别强势人物了"
			}
		]
	]
} {
	"bb": {
		"num": 999999,
		"str": "特别强势人物了"
	},
	"dictionary2": {
		"猫仙洞": {
			"b": false,
			"num": 11111,
			"str": "rradads"
		},
		"为啥": {
			"b": true,
			"num": 444,
			"str": "四叉树在"
		}
	},
	"dictionary3": [
		[
			[ 3, 2, 1 ],
			{
				"num": 11111,
				"str": "rradads"
			}
		],
		[
			[ 1, 4, -9.8 ],
			{
				"num": 888,
				"str": "热热我"
			}
		],
		[
			[ -3.2E-13, 3.0E+13, 0.99 ],
			{
				"num": 999999,
				"str": "特别强势人物了"
			}
		]
	],

	"V32": [ 4, 5, 6 ],
	"v3": [ 1, 2, 3 ]

} {
	"dictionary1": [
		[
			1,
			"rradads"
		],
		[
			4,
			"热热我"
		],
		[
			999999,
			"特别强势人物了"
		]
	]

} "b": true, "num": 33.56, "kk": -15, "str": "4ERWRds", {
	"objects": [
		{
			"#type": "System.Int32",
			"#value": 12
		},
		{
			"#type": "System.Double",
			"#value": -3.14E-12
		}
	],
	"testEnums": [ "Test002", "Test004", "Test003" ],
	"testEnum": "Test002",

	"tClass001": {
		"objects": [
			{
				"#type": "System.Int32",
				"#value": 12
			},
			{
				"#type": "System.Double",
				"#value": -3.14E-12
			},
			{
				"#type": "System.String",
				"#value": "3213.##%^&*()"
			}
		],
		"tClass002s": [
			{
				"size": 1,
				"testString": "A@0"
			},
			{
				"size": 2,
				"testString": "A@1",
				"tClass003": {
					"testString": "testClassDD4"
				},
				"tClass003s": [
					{
						"testString": "0000"
					},
					{
						"testString": "0001"
					},
					{
						"testString": "testClassDD3"
					}
				]
			},
			{
				"size": 3,
				"testString": "asdede"
			}
		],
		"tClass002": {
			"size": 12,
			"tClass003": {
				"testString": "testClassDD"
			},
			"tClass003s": [
				{
					"testString": "0000"
				},
				{
					"testString": "0001"
				},
				{
					"testString": "testClassDD2"
				},
				{
					"testString": "0003"
				}
			],

			"testString": "A@2"
		},
		"TestDuble": -3.14E-12
	},

	"testClassDD": "#/tClass001/tClass002/tClass003",
	"testClassDD4": "#/tClass001/tClass002s/1/tClass003",
	"testClassDD2": "#/tClass001/tClass002/tClass003s/2",
	"testClassDD3": "#/tClass001/tClass002s/1/tClass003s/2",

	"arrayRekn": [
		[
			[
				{
					"num": 1
				},
				{
					"num": 2,
					"str": "ddd"
				}
			],
			[
				{
					"num": 3
				},
				{
					"num": 4
				}
			]
		],
		[
			[
				{
					"num": 5,
					"str": "5"
				},
				{
					"num": 6,
					"str": "6"
				}
			],
			[
				{
					"num": 7,
					"str": "7"
				},
				{
					"num": 8,
					"str": "8"
				}
			]
		],
		[
			[
				{
					"num": 9,
					"str": "9"
				},
				{
					"num": 10,
					"str": "10"
				}
			],
			[
				{
					"num": 11,
					"str": "11"
				},
				{
					"num": 12,
					"str": "12"
				}
			]
		]
	],

	"listB": [
		{
			"str": "00001",
			"b": true,
			"num": -8.56
		},
		{
			"str": "aaaa2",
			"b": false,
			"num": 10000888.999
		}
	],
	"arrayLinkedList": [ 1, 2, 3, 4, 7 ],
	"b": true,
	"num": 33.56,
	"kk": -15,
	"str": "4ERWRds",
	"testOB": {
		"numI": 13,
		"num": 3.6,
		"p3_0": {
			"x": 1.2,
			"y": -1.8,
			"z": 33
		},
		"p3_2": {
			"x": -12,
			"y": 18,
			"z": 3.3
		}
	},
	"arrayStack": [
		3,
		4,
		5
	],

	"v3": [ 3, 2, 1 ],
	"gcc": {
		"k": 12,
		"bbb": {
			"str": "cc",
			"b": true,
			"num": -8.56
		}
	},

	"gD": {
		"k": -3.14E-12,
		"str": "3特瑞aV",
		"b": true
	},

	"p3": {
		"x": 2,
		"y": 1,
		"z": 33
	},

	"fd": [
		{
			"b": true,
			"num": -3.14E-12,
			"str": "ddd"
		},
		{
			"b": false,
			"num": 34.5
		},
		{
			"num": 999999
		}
	],
	"arraydouble": [
		3.333,
		-4.8888,
		-5.34E+108
	],
	"arraystring": [
		"true",
		"null",
		"ed false"
	],
	"arraybool": [
		false,
		true,
		false
	],
	"dictionary3": [
		[
			[ 3, 2, 1 ],
			{
				"num": 11111,
				"str": "rradads"
			}
		],
		[
			[ 1, 4, -9.8 ],
			{
				"num": 888,
				"str": "热热我"
			}
		],
		[
			[ -3.2E-13, 3.0E+13, 0.99 ],
			{
				"num": 999999,
				"str": "特别强势人物了"
			}
		]
	],
	"dcc": {
		"#create": [
			{
				"#type": "System.String",
				"#value": "3213.##%^&*()"
			},
			{
				"#type": "System.Collections.Generic.List`1[System.Int32]",
				"#value": [ 14, 24, 34, 44, 54 ]
			},
			{
				"#type": "System.Double",
				"#value": -3.14E-12
			}
		]
	},

	"testDelegate2": [
		{
			"type": "DogJson.TClassA",
			"name": "Fool",
			"args": [ "System.Int32", "System.String" ],
			"target": null
		},
		{
			"type": "DogJson.TClassA",
			"name": "Foo2",
			"args": [ "System.Int32", "System.String" ],
			"target": null
		}
	],
	"Iclass0Z": {
		"#type": "DogJson.Program+TclassC",
		"b": 122,
		"value": 1.444,
		"bbb": {
			"b": true,
			"num": -3.14E-12,
			"str": "hello world"
		}
	},
	"arrayint2": {
		"#type": "System.Collections.Generic.List`1[System.Int32]",
		"#value": [ 14, 24, 34, 44, 54 ]
	},


	"arrayArray4": [
		[ 1, 2, 3, 4, 5 ],
		[ 11, 12, 13, 14, 15 ],
		[ 21, 22, 23, 24, 25 ]
	],
	"arrayArray3": [ 1, 2, 3, 4, 5 ],
	"arrayArray1": [
		[
			[ 1, 2, 3, 4, 5 ],
			[ 11, 12, 13, 14, 15 ],
			[ 21, 22, 23, 24, 25 ]
		],
		[
			[ 101, 102, 103, 104, 105 ],
			[ 1011, 1012, 1013, 1014, 1015 ],
			[ 1021, 1022, 1023, 1024, 1025 ]
		]
	],
	"arrayArray2": [
		[
			[ 1, 2, 3, 4, 5 ],
			[ 11, 12, 13, 14, 15 ],
			[ 21, 22, 23, 24, 25 ]
		],
		[
			[ 101, 102, 103, 104, 105 ],
			[ 1011, 1012, 1013, 1014, 1015 ],
			[ 1021, 1022, 1023, 1024, 1025 ]
		]
	],
	"arrayArray5": [
		[
			[ 1, 2, 3, 4, 5 ],
			[ 11, 12, 13, 14, 15 ],
			[ 21, 22, 23, 24, 25 ]
		],
		[
			[ 1001, 1002, 1003, 1004, 1005 ],
			[ 1011, 1012, 1013, 1014, 1015 ],
			[ 1021, 1022, 1023, 1024, 1025 ]
		]
	]

}


//-代理读取基本json类型需要同一

//枚举写入
//字符串匹配优化


//处理缓存为可变长度
//root 额外处理
//注释

//null处理
//测试用例
//路径多维数组

//unity适配
	
//x 字符串自定义代理




//-循环引用序列化 可能需要调整顺序，使得路径恒为前缀生成

//-字符串为key的字典额外处理


//-构造函数注册
//-数组的元素真类型于数组元素类型不同
//-数组容器的元素真类型于数组元素类型不同

//-泛型特例容器
//-委托写入



CollectionManager TypeAddrReflectionWrapper 类型 TypeAllCollection {
	enum TypeSerialization
	{
		Wrapper,
		CollectionObject,
		CollectionArray,
		String,
	}
	TypeAddrReflectionWrapper wrapper
	TypeAddrReflectionWrapper wrapper
	rapper IWriterCollectionObject
	IWriterCollectionObject IReadCollectionString
	IReadCollectionString
} CollectionManager.MainType Dictionary<Type,TypeAllCollection> CollectionManager.MainType Dictionary<String,TypeAllCollection> TypeAddrReflectionWrapper {
	TypeAddrFieldAndProperty {
		bool isCollection
		bool isCollectionString
		IWriterCollectionObject IWriterCollectionObject
		IReadCollectionString IReadCollectionString
	}
} IsRef = true ：容器类必须在初始化时创建对象 全部使用统一指针 IsRef = false： 容器类不能在序列化时被重复引用 IsOutTemp = true 容器类弹出一个临时对象
